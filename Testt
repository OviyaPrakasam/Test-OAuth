import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.URL;

public class Main {
    public static void main(String[] args) {
        try {
            // Create URL object
            URL url = new URL("your_url_here");

            // Open connection
            HttpURLConnection conn = (HttpURLConnection) url.openConnection();

            // Set request method
            conn.setRequestMethod("GET");

            // Get the response code
            int responseCode = conn.getResponseCode();

            // Check if the request was successful (response code 200)
            if (responseCode == HttpURLConnection.HTTP_OK) {
                // Create a BufferedReader to read the response
                BufferedReader in = new BufferedReader(new InputStreamReader(conn.getInputStream()));
                String inputLine;
                StringBuffer response = new StringBuffer();

                // Read the response line by line
                while ((inputLine = in.readLine()) != null) {
                    response.append(inputLine);
                }
                in.close();

                // Print the JSON response
                System.out.println(response.toString());
            } else {
                System.out.println("HTTP request failed with response code: " + responseCode);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.client.RestTemplate;
import org.springframework.web.client.HttpClientErrorException;
import org.springframework.security.core.annotation.AuthenticationPrincipal;
import org.springframework.security.oauth2.core.user.OAuth2User;
import java.util.List;
import java.util.Map;

@Controller
public class YourController {

    @Autowired
    private RestTemplate restTemplate;

    @GetMapping("/")
    public String index(@AuthenticationPrincipal OAuth2User principal, Model model) {
        System.out.println("User details fetched from Gitlab: " + principal);

        if (principal != null) {
            model.addAttribute("name", principal.getAttribute("name"));
            model.addAttribute("isAuthenticated", true);

            String url = "https://prodgitlab.usaa.com/users/PL5X856/activity?limit=15";

            try {
                // Make the request
                ResponseEntity<String> responseEntity = restTemplate.getForEntity(url, String.class);

                System.out.println("Details of a response Entity: " + responseEntity);

                // Extract Info
                String requestUrl = responseEntity.getStatusCode().toString();
                Map<String, List<String>> headers = responseEntity.getHeaders();
                String responseBodyPreview = responseEntity.getHeaders().toString();
                String responseBody = responseEntity.getBody();

                model.addAttribute("requestUrl", requestUrl);
                model.addAttribute("headers", headers);
                model.addAttribute("responseBodyPreview", responseBodyPreview);
                model.addAttribute("responseBody", responseBody);

            } catch (HttpClientErrorException.Redirect redirectException) {
                // Handle redirection
                String redirectedUrl = redirectException.getResponseHeaders().getLocation().toString();
                System.out.println("Redirected URL: " + redirectedUrl);
                model.addAttribute("redirectedUrl", redirectedUrl);
            } catch (Exception e) {
                e.printStackTrace();
            }

        } else {
            System.out.println("Not Authenticated");
            model.addAttribute("isAuthenticated", false);
        }

        return "index";
    }
}

import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.URL;
import java.util.Map;

public class XhrDetails {
    public static void main(String[] args) {
        try {
            // URL to fetch
            String url = "https://prodgitlab.usaa.com/PL5X856";

            // Create URL object
            URL obj = new URL(url);

            // Open connection
            HttpURLConnection con = (HttpURLConnection) obj.openConnection();

            // Set request method
            con.setRequestMethod("GET");

            // Set XHR headers if needed
            con.setRequestProperty("X-Requested-With", "XMLHttpRequest");
            
            // Get all headers
            Map<String, java.util.List<String>> headerFields = con.getHeaderFields();
            
            // Print response headers
            for (Map.Entry<String, java.util.List<String>> entry : headerFields.entrySet()) {
                System.out.println(entry.getKey() + ": " + entry.getValue());
            }

            // Get the response code
            int responseCode = con.getResponseCode();
            System.out.println("Response Code: " + responseCode);

            // Read the response
            BufferedReader in = new BufferedReader(new InputStreamReader(con.getInputStream()));
            String inputLine;
            StringBuffer response = new StringBuffer();

            while ((inputLine = in.readLine()) != null) {
                response.append(inputLine);
            }
            in.close();

            // Print the response
            System.out.println("Response:\n" + response.toString());
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}
