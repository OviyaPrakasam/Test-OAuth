public  ModelAndView doBannerSSOAuth(HttpServletRequest request, HttpServletResponse response) throws Exception {
		HttpSession session = request.getSession(false);
		String ssoCode=null;

		if(session != null && session.getAttribute(CONST_SMM_JSON_CONFIG) !=null){
			SMMUIResponseVO smmuiResponseVO = (SMMUIResponseVO) session.getAttribute(CONST_SMM_JSON_CONFIG);
			try {
				logger.info("Customer "+smmuiResponseVO.getCustRelId()+" clicked on SMM Banner");
				ssoCode = customerBO.generateSMMSSOCode(smmuiResponseVO.getCustRelId(),smmuiResponseVO.getSmmRADataVO());
			}catch (Exception e) {
				logger.error("SMM Banner Warning :Unable to fetch SMM Primary Banner CASAS SSO Code--"+e.getMessage());
			}
		}else if (session !=null && session.getAttribute("smmTempObj") !=null)  {
			//These are fallback blocks in case if above session value is empty...Just observed sometimes above is null..
			logger.error("SMM Banner :Inside main else session null");

			SMMUIResponseVO smmuiResponseVO = (SMMUIResponseVO) session.getAttribute("smmTempObj");
			logger.info("Customer "+smmuiResponseVO.getCustRelId()+" clicked on SMM Banner");
			try {
				ssoCode = customerBO.generateSMMSSOCode(smmuiResponseVO.getCustRelId(),smmuiResponseVO.getSmmRADataVO());
			}catch (Exception e) {
				logger.error("SMM Banner Warning :Unable to fetch SMM Primary Banner CASAS SSO Code--"+e.getMessage());
			}
		} else if(session != null &&  session.getAttribute("icmProfileId")!=null){
			String icmProfileId=(String)session.getAttribute("icmProfileId");
			try {
				logger.info("Customer "+icmProfileId+" clicked on SMM Banner");
				ssoCode = customerBO.generateSMMSSOCode(icmProfileId);
			}catch (Exception e) {
				logger.error("SMM Banner Warning :Unable to fetch SMM Primary Banner CASAS SSO Code--"+e.getMessage());
			}
		}
		response.setContentType("application/json");
		response.setCharacterEncoding("UTF-8");
		if (StringUtils.isNotBlank(ssoCode)) {
			response.getWriter().write(ssoCode);
		}else {
			logger.error("SMM Banner Warning:SSOCode value is empty or null");
			response.getWriter().write("error");
		}
		return null;
	}





@Test
public void testDoBannerSSOAuth_validToken() {
    String result = authService.doBannerSSOAuth("valid-token");
    assertEquals("UserAuthenticated", result);
}

@Test
public void testDoBannerSSOAuth_invalidToken() {
    String result = authService.doBannerSSOAuth("invalid-token");
    assertEquals("AuthenticationFailed", result);
}

